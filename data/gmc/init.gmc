globaldef update_bbox(inst)
{
    with(inst)
    {
        bbox[0] = offsets[0] + y;
        bbox[1] = offsets[1] + y;
        bbox[2] = offsets[2] + x;
        bbox[3] = offsets[3] + x;
    }
}

globaldef abs(x)
{
    if(x > 0)
        return x;
    return -x;
}
globaldef sign(x)
{
    if(x > 0)
        return 1;
    if(x < 0)
        return -1;
    return 0;
}

obj Character {
    def create()
    {
        far x = 64;
        far y = 64;
        far xspeed = 0;
        far yspeed = 0;
        far want_to_jump = false;
        far x_wish = 0;
        
        far accel = 0.125;
        far deaccel = 0.05;
        far drag = 0.95;
        far maxspeed = 1.75;
        far jump_velocity = 2.5;
        
        far sprite = sprite_load("data/images/mychar.png", 16, 32);
        far offsets = [-16, +16, -8, +8];
        far bbox = [0,0,0,0];
        
        update_bbox(id);
    }
}

globalvar gravity = 0.06;

globalvar mychar;
global.mychar = instance_create(Character);

globalvar tile_sprite = sprite_load_with_subimages("data/images/tile2.png", [[16, 16, 0, 0, 32, 32], [16, 16, 32, 0, 64, 32]]);

obj Tile {
    def create()
    {
        far sprite = global.tile_sprite;
    }
    def init(arg_x, arg_y)
    {
        far x = 16+arg_x*32;
        far y = 16+arg_y*32;
        
        far offsets = [-16, +16, -16, +16];
        far bbox = [0,0,0,0];
        
        update_bbox(id);
    }
}

def make_tile(x, y)
{
    var tile = instance_create(Tile);
    tile.init(x, y);
}

for(var i = 0; i < 20; i++)
    make_tile(i,5-floor(i/4));

print("----init.gmc has been run");
